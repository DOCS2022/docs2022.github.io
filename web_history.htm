<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html><head>
<link href="web_history_files/2005.html" type="text/css" rel="stylesheet">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style type="text/css">
    .STYLE0 {
        font-family: Verdana, Arial, Helvetica, sans-serif;
        font-size: 18px;
    }

    .STYLE10 {
        font-family: Verdana, Arial, Helvetica, sans-serif;
        font-size: 18px;
        color: #00F;
    }

    .STYLE1 {
        font-family: "Times New Roman", Times, serif;
        font-size: 24pt;
    }

    .STYLE2 {
        font-family: Verdana, Arial, Helvetica, sans-serif;
        font-size: 20px;
    }
</style>
</head>

<body>

    <h1>History</h1><hr>

    <span class="STYLE0">
	<p>2019.04.19-2019.04.20; Xuzhou, China; The 3rd Symposium on Data-Driven Optimization and Application of Complex Systems; China University of Mining and Technology (Jiangsu); There were 15 Chinese representatives and 50 foreign representatives.</p>
	<p>2018.04.28-2018.04.29; Taiyuan, China; The 2nd Symposium on Data-Driven Optimization and Application of Complex Systems; Taiyuan University of Science and Technology; There were 150 Chinese representatives and 50 foreign representatives. </p>
    <p>2017.04.22-2017.04.23; Hefei, China; The 1st Symposium on Data-Driven Optimization and Application of Complex Systems; Anhui University; There were 150 Chinese representatives and 50 foreign representatives. </p>

<br><br>

</span><script>mendeleyWebImporter = {
  downloadPdfs(t,e) { return this._call('downloadPdfs', [t,e]); },
  open() { return this._call('open', []); },
  setLoginToken(t) { return this._call('setLoginToken', [t]); },
  _call(methodName, methodArgs) {
    const id = Math.random();
    window.postMessage({ id, token: '0.6586124220058776', methodName, methodArgs }, 'https://docs2022.github.io');
    return new Promise(resolve => {
      const listener = window.addEventListener('message', event => {
        const data = event.data;
        if (typeof data !== 'object' || !('result' in data) || data.id !== id) return;
        window.removeEventListener('message', listener);
        resolve(data.result);
      });
    });
  }
};</script></body></html>